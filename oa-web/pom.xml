<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>oa-web</artifactId>
  <packaging>war</packaging>

  <parent>
    <groupId>com.yjcxyx.oa</groupId>
    <artifactId>oa-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <name>oa-web</name>
  <!-- FIXME change it to the project's website -->
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- mybatis 包 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
    </dependency>

    <!-- mysql连接 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <!-- 数据源 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.10</version>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>

    <!-- log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <!-- servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>

    <!-- json -->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <!-- 文件上传 -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>

    <!-- 导入oa系统另外3个依赖 -->
    <dependency>
      <groupId>com.yjcxyx.oa</groupId>
      <artifactId>oa-organ</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yjcxyx.oa</groupId>
      <artifactId>oa-auth</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yjcxyx.oa</groupId>
      <artifactId>oa-flow</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>oa-web</finalName>
    <plugins>
      <plugin>
        <!-- 单元覆盖率插件 -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- jetty容器插件 -->
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>7.1.6.v20100715</version>
<!--        <configuration>-->
<!--          <scanIntervalSeconds>10</scanIntervalSeconds>-->
<!--          <webAppConfig>-->
<!--            <contextPath>/test</contextPath>-->
<!--          </webAppConfig>-->
<!--          <stopKey/>-->
<!--          <stopPort/>-->
<!--        </configuration>-->
      </plugin>
      
      <plugin>
        <!-- 自动化部署远程tomcat插件 -->
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <container>
            <containerId>tomcat6x</containerId>
            <type>remote</type>
          </container>
          <configuration>
            <type>runtime</type>
            <properties>
              <cargo.remote.username>${prop.cargo.remote.username}</cargo.remote.username>
              <cargo.remote.password>${prop.cargo.remote.password}</cargo.remote.password>
              <cargo.tomcat.manager.url>${prop.cargo.tomcat.manager.url}</cargo.tomcat.manager.url>
              <cargo.servlet.port>${prop.cargo.servlet.port}</cargo.servlet.port>
            </properties>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <prop.cargo.remote.username>admin</prop.cargo.remote.username>
        <prop.cargo.remote.password>admin</prop.cargo.remote.password>
        <prop.cargo.tomcat.manager.url>http://localhost:8080/manager</prop.cargo.tomcat.manager.url>
        <prop.cargo.servlet.port>8080</prop.cargo.servlet.port>
      </properties>
    </profile>

    <profile>
      <id>beta</id>
      <properties>
        <prop.cargo.remote.username>admin-beta</prop.cargo.remote.username>
        <prop.cargo.remote.password>admin-beta</prop.cargo.remote.password>
        <prop.cargo.tomcat.manager.url>http://localhost:8080/manager-beta</prop.cargo.tomcat.manager.url>
        <prop.cargo.servlet.port>8080</prop.cargo.servlet.port>
      </properties>
    </profile>

    <profile>
      <id>test</id>
      <properties>
        <prop.cargo.remote.username>admin-test</prop.cargo.remote.username>
        <prop.cargo.remote.password>admin-test</prop.cargo.remote.password>
        <prop.cargo.tomcat.manager.url>http://localhost:8080/manager-test</prop.cargo.tomcat.manager.url>
        <prop.cargo.servlet.port>8080</prop.cargo.servlet.port>
      </properties>
    </profile>

    <profile>
      <id>staging</id>
      <properties>
        <prop.cargo.remote.username>admin-staging</prop.cargo.remote.username>
        <prop.cargo.remote.password>admin-staging</prop.cargo.remote.password>
        <prop.cargo.tomcat.manager.url>http://localhost:8080/manager-staging</prop.cargo.tomcat.manager.url>
        <prop.cargo.servlet.port>8080</prop.cargo.servlet.port>
      </properties>
    </profile>

    <profile>
      <id>prod</id>
      <properties>
        <prop.cargo.remote.username>admin-prod</prop.cargo.remote.username>
        <prop.cargo.remote.password>admin-prod</prop.cargo.remote.password>
        <prop.cargo.tomcat.manager.url>http://localhost:8080/manager-prod</prop.cargo.tomcat.manager.url>
        <prop.cargo.servlet.port>8080</prop.cargo.servlet.port>
      </properties>
    </profile>
  </profiles>
</project>
